---
import { ViewTransitions } from 'astro:transitions';
import '../styles/globals.css';

interface Props {
  title: string;
  description?: string;
  lang?: 'en' | 'fr';
  currentPath?: string;
}

const {
  title,
  description = "WorkflowLeaf: Automate your property-management admin with custom AI workflows.",
  lang = 'en',
  currentPath = ''
} = Astro.props;

const baseUrl = 'https://workflowleaf.com';

const canonicalUrl = lang === 'fr' ? `${baseUrl}/fr/` : baseUrl;

const hreflangLinks = [
  { rel: 'alternate', hreflang: 'en', href: 'https://workflowleaf.com' },
  { rel: 'alternate', hreflang: 'fr', href: 'https://workflowleaf.com/fr/' },
  { rel: 'alternate', hreflang: 'x-default', href: 'https://workflowleaf.com' },
];
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <link rel="canonical" href={canonicalUrl} />

    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={`${baseUrl}${currentPath}`} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={`${baseUrl}/og-image.jpg`} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={`${baseUrl}${currentPath}`} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={`${baseUrl}/og-image.jpg`} />

    {hreflangLinks.map(({ rel, hreflang, href }) => (
      <link rel={rel} hreflang={hreflang} href={href} />
    ))}

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />

    <!-- Theme detection and persistence script -->
    <script set:html={`
      (function() {
        function applyTheme() {
          try {
            const storedTheme = localStorage.getItem('theme');
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            if (storedTheme === 'dark' || (!storedTheme && prefersDark)) {
              document.documentElement.classList.add('dark');
            } else {
              document.documentElement.classList.remove('dark');
            }
          } catch (err) {
            console.error('Theme application error:', err);
          }
        }

        // Apply theme on initial load
        applyTheme();

        // Listen for system theme changes and update if no stored preference
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
          if (!localStorage.getItem('theme')) {
            applyTheme(); // Re-apply based on system preference if no stored theme
          }
        });

        // Listen for localStorage changes (e.g., from other tabs)
        window.addEventListener('storage', e => {
          if (e.key === 'theme') {
            applyTheme(); // Re-apply based on stored theme
          }
        });

        // Listen for Astro View Transitions after swap
        document.addEventListener('astro:after-swap', applyTheme);

      })();
    `} />

    <ViewTransitions />
  </head>
  <body class="bg-background text-foreground min-h-screen flex flex-col">
    <slot />
  </body>
</html>
